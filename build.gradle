group 'com.bnpparibas.devops'
version '1.0-SNAPSHOT'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.1'
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2"
    }
}

apply plugin: 'java'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'org.sonarqube'
apply plugin: 'jacoco'

sonarqube {
    properties {
        property "sonar.projectName", "Java :: Simple Project :: SonarQube Scanner for Gradle"
        property "sonar.projectKey", "org.sonarqube:java-gradle-simple"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
    }
}
/*
jacoco {
   // toolVersion = "0.7.7.201606060606" //jacoco version
    reportsDir = file("$buildDir/reports/jacoco") //default directory where jacoco generates test reports
}*/

repositories {
    mavenCentral()
}


dependencies {
    testCompile("org.junit.jupiter:junit-jupiter-api:5.1.0")

    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.0.1',
            'org.junit.vintage:junit-vintage-engine:4.12.1',
            'org.junit.platform:junit-platform-launcher:1.0.1',
            'org.junit.platform:junit-platform-runner:1.0.1')
}

junitPlatform {
    reportsDir file('build/test-results/test')
}

afterEvaluate {

    jacoco {
      //  toolVersion = toolVersions.jacoco
       // toolVersion = "0.7.1.201405082137"
        applyTo junitPlatformTest
    }

    task junit5CodeCoverageReport(type:JacocoReport){
        executionData junitPlatformTest
        sourceSets sourceSets.main
        sourceDirectories = files(project.sourceSets.main.allSource.srcDirs)
        classDirectories = files(project.sourceSets.main.output)
        reports {
            xml.enabled = true
            xml.destination file("${buildDir}/jacoco/report.xml")
            html.enabled = true
            html.destination file("${buildDir}/jacoco/html")
        }
    }
}

